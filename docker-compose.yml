# Mark Shust's Docker Configuration for Magento
# (https://github.com/markshust/docker-magento)
#
# Version 37.0.2

version: "3"

services:
  app:
    image: markoshust/magento-nginx:1.18-5
    ports:
      - "80:8000"
      - "443:8443"
    links:
      - db
      - phpfpm
    volumes: &project_name-appvolumes
      - project_name-sockdata:/sock
      - project_name-ssldata:/etc/nginx/certs
      - ./config/nginx/nginx.conf:/var/www/html/nginx.conf:delegated
      - ./config/nginx/default.conf:/etc/nginx/conf.d/default.conf:delegated
      - ./src:/var/www/html
    networks:
      - project_name-network


  phpfpm:
    image: markoshust/magento-php:7.4-fpm-11
    env_file: env/phpfpm.env
    links:
      - db
    volumes: *project_name-appvolumes
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    networks:
      - project_name-network

  db:
    image: mariadb:10.5
    command: --max_allowed_packet=64M
    ports:
      - "3306:3306"
    env_file: env/db.env
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=magento --execute \"SHOW DATABASES;\""
      retries: 5
      interval: 5s
    volumes:
      - project_name-dbdata:/var/lib/mysql
    networks:
      - project_name-network

  redis:
    image: redis:5.0-alpine
    ports:
      - "6379:6379"
    networks:
      - project_name-network

  elasticsearch:
    image: markoshust/magento-elasticsearch:7.9.3-1
    # build:
    #   context: ./build/ElasticSearch
    #   dockerfile: Dockerfile
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - "cluster.routing.allocation.disk.threshold_enabled=false"
      - "index.blocks.read_only_allow_delete"
    networks:
      - project_name-network

  rabbitmq:
    image: rabbitmq:3.8.22-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - project_name-rabbitmqdata:/var/lib/rabbitmq
    environment:
      - RABBITMQ_VM_MEMORY_HIGH_WATERMARK=1GB
    networks:
      - project_name-network

  # Disabling cron by default as it uses higher CPU, enable if needed
  #cron:

  #  image: markoshust/magento-php:7.3-fpm-12
  #  user: root
  #  command: /usr/local/bin/cronstart
  #  tty: true
  #  links:
  #    - db
  #  volumes: *project_name-appvolumes

  mailcatcher:
    image: sj26/mailcatcher
    ports:
      - "1080:1080"
    networks:
      - project_name-network

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure
    ports:
      - 9999:8080
    networks:
      - project_name-network

networks:
  project_name-network:
    driver: bridge

volumes:
  project_name-dbdata:
  project_name-rabbitmqdata:
  project_name-sockdata:
  project_name-ssldata:
