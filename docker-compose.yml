# Mark Shust's Docker Configuration for Magento
# (https://github.com/markshust/docker-magento)
#
# Version 37.0.2

version: "3"

services:
  app:
    image: markoshust/magento-nginx:1.18-4
    ports:
      - "80:8000"
      - "443:8443"
    links:
      - db
      - phpfpm
    volumes: &<project_name>-appvolumes
      - <project_name>-sockdata:/sock
      - <project_name>-ssldata:/etc/nginx/certs
      - ./env/nginx.conf:/var/www/html/nginx.conf:cached
      - ./env/default.conf:/etc/nginx/conf.d/default.conf:cached
      - ./src:/var/www/html:cached
    networks:
      - <project_name>-network


  phpfpm:
    image: markoshust/magento-php:7.3-fpm-12
    links:
      - db
    volumes: *<project_name>-appvolumes
    extra_hosts:
      - "host.docker.internal:172.17.0.1"
    networks:
      - <project_name>-network

  db:
    image: percona:5.7
    command: --max_allowed_packet=64M
    ports:
      - "3306:3306"
    env_file: env/db.env
    volumes:
      - <project_name>-dbdata:/var/lib/mysql
    networks:
      - <project_name>-network

  redis:
    image: redis:5.0-alpine
    networks:
      - <project_name>-network

  elasticsearch:
    image: markoshust/magento-elasticsearch:7.7.1-0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - <project_name>-network

  rabbitmq:
    image: rabbitmq:3.7-management-alpine
    ports:
      - "15672:15672"
      - "5672:5672"
    volumes:
      - <project_name>-rabbitmqdata:/var/lib/rabbitmq
    networks:
        - <project_name>-network

  # Disabling cron by default as it uses higher CPU, enable if needed
  #cron:

  #  image: markoshust/magento-php:7.3-fpm-12
  #  user: root
  #  command: /usr/local/bin/cronstart
  #  tty: true
  #  links:
  #    - db
  #  volumes: *<project_name>-appvolumes

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025"
      - "8025:8025"
    networks:
      - <project_name>-network

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    ports:
      - 9999:8080
    networks:
      - <project_name>-network

networks:
  <project_name>-network:
    driver: bridge

volumes:
  <project_name>-dbdata:
  <project_name>-rabbitmqdata:
  <project_name>-sockdata:
  <project_name>-ssldata:
